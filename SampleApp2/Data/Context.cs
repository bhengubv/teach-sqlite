// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable

using Microsoft.EntityFrameworkCore;
using SampleApp2.Models;

namespace SampleApp2.Data;

public partial class Context : DbContext
{
    public Context()
    {
    }

    public Context(DbContextOptions<Context> options)
        : base(options)
    {
    }

    public virtual DbSet<ContactDevices> ContactDevices { get; set; }

    public virtual DbSet<ContactType> ContactType { get; set; }

    public virtual DbSet<Contacts> Contacts { get; set; }

    public virtual DbSet<PhoneType> PhoneType { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlite("Data Source=NorthWindContacts.db");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ContactDevices>(entity =>
        {
            entity.Property(e => e.PhoneNumber)
                .UseCollation("NOCASE")
                .HasColumnType("nvarchar");

            entity.HasOne(d => d.Contact)
                .WithMany(p => p.ContactDevices)
                .HasForeignKey(d => d.ContactId);

            entity.HasOne(d => d.PhoneTypeIdentifierNavigation)
                .WithMany(p => p.ContactDevices)
                .HasForeignKey(d => d.PhoneTypeIdentifier);
        });

        modelBuilder.Entity<ContactType>(entity =>
        {
            entity.HasKey(e => e.ContactTypeIdentifier);

            entity.Property(e => e.ContactTitle)
                .UseCollation("NOCASE")
                .HasColumnType("nvarchar");
        });

        modelBuilder.Entity<Contacts>(entity =>
        {
            entity.HasKey(e => e.ContactId);

            entity.Property(e => e.FirstName)
                .UseCollation("NOCASE")
                .HasColumnType("nvarchar");
            entity.Property(e => e.LastName)
                .UseCollation("NOCASE")
                .HasColumnType("nvarchar");

            entity.HasOne(d => d.ContactTypeIdentifierNavigation)
                .WithMany(p => p.Contacts)
                .HasForeignKey(d => d.ContactTypeIdentifier);
        });

        modelBuilder.Entity<PhoneType>(entity =>
        {
            entity.HasKey(e => e.PhoneTypeIdenitfier);

            entity.Property(e => e.PhoneTypeDescription)
                .UseCollation("NOCASE")
                .HasColumnType("nvarchar");
        });

        OnModelCreatingPartial(modelBuilder);

    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}